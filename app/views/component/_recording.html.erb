<%= stylesheet_link_tag "video-js" %>
<%= stylesheet_link_tag "videojs.record" %>
<%= stylesheet_link_tag "style" %>

<style type="text/css">
  /* change player background color */
  #myAudio {
    background-color: #9FD6BA;
  }
</style>

</br>
<div class="card col-md-10 offset-1">
  </br>
  <audio id="myAudio" class="video-js vjs-default-skin card-img-top" style="margin: auto;" ></audio>
  <div class="card-block" style="text-align:center">
    </br>
    <div id="recordingslist" ></div>
    <a type="button" id="submitButton" class="btn btn-success">Submit</a>
  </div>
</div>

<script type="text/javascript">
  var recordingsCount = 0;
  var currentRecordingUrl;
  var currentRecording;
  var player = videojs("myAudio",
  {
    controls: true,
    width: 600,
    height: 300,
    // fluid: true,
    plugins: {
      wavesurfer: {
        src: "live",
        waveColor: "black",
        progressColor: "#2E732D",
        debug: true,
        cursorWidth: 1,
        msDisplayMax: 20,
        hideScrollbar: true,
        debug: false
      },
      record: {
        audio: true,
        video: false,
        maxLength: 20,
        debug: false,
        audioEngine: "recorder.js"
      }
    }
  });
  // error handling
  player.on('deviceError', function()
  {
    // console.log('device error:', player.deviceErrorCode);
  });
  player.on('error', function(error)
  {
    // console.log('error:', error);
  });
  // user clicked the record button and started recording
  player.on('startRecord', function()
  {
    // console.log('started recording!');
  });
  // user completed recording and stream is available
  player.on('finishRecord', function()
  {
    // the blob object contains the recorded data that
    // can be downloaded by the user, stored on server etc.
    // console.log('finished recording: ', player.recordedData);
    recordingsCount++;
    var blob = player.recordedData;
    var url = URL.createObjectURL(blob);

    var div = document.createElement('div');
    div.setAttribute("class", "form-check");

    var label = document.createElement('label');
    label.setAttribute("class", "form-check-label");

    var input = document.createElement('input');
    input.setAttribute("class", "form-check-input");
    input.setAttribute("type", "radio");
    input.setAttribute("value", "option"+recordingsCount);
    input.setAttribute("name", "recordings");
    input.setAttribute("id", "recording"+recordingsCount);

    var au = document.createElement('audio');
    var linebreak = document.createElement("br");
    var hf = document.createElement('a');

    au.controls = true;
    au.src = url;
    hf.href = url;
    hf.download = new Date().toISOString() + '.wav';
    hf.innerHTML = hf.download;

    input.addEventListener("click", function () {
      currentRecordingUrl = '<%= raw @s3_base_url %>' + hf.download;
      currentRecording = blob;
    });

    label.appendChild(input);
    label.appendChild(au);
    label.appendChild(linebreak);
    label.appendChild(hf);
    div.appendChild(label);

    document.getElementById("recordingslist").appendChild(div);
  });

  $('#submitButton').click(function(event) {
    if (currentRecordingUrl == null) {
      alert('Please choose a recording to be submitted!');
    } else {
      $.ajax({
        url: "/api/v1/aws_presigned_url?",
        type: "GET",
        crossDomain: true,
        async: true,
        dataType: "json",
        data: { "url" : currentRecordingUrl },
        success: function(data) {
          $.ajax({
            type: 'PUT',
            url: data['url'],
            crossDomain: true,
            async: true,
            data: currentRecording,
            contentType: currentRecording.type,
            processData: false,
            success: function(data) {
              var params = {
                url: currentRecordingUrl,
                recording_list_id: '<%= recording_list_id %>'
              }
              window.location.href = '/api/v1/recordings/new?' + $.param(params);
            }
          });
        }
      });
    }
  });
</script>
